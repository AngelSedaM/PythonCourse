//Pandas library for data manipulation 

.head() return number of records

.info retruns information of dataframe

.describe return a description of dataframe

.values() return the values of dataframe

.columns() return the columns of datadframe

.index() find a record from value

.shape  returns the number of rows and columns of the DataFrame.

# Print the head of the homelessness data
print(homelessness.head())

# Print information about homelessness
print(homelessness.info())

# Print the shape of homelessness
print(homelessness.shape)

# Print a description of homelessness
print(homelessness.describe())

# Import pandas using the alias pd
import pandas as pd

# Print the values of homelessness
print(homelessness.values)

# Print the column index of homelessness
print(homelessness.columns)

# Print the row index of homelessness
print(homelessness.index)



//
sort_values('colmuna') sort records from a column
sort_values('colmuna', ascending= False) desc /asc
sort_values(['colmuna1', colu'mna2]) multimples values
sort_values(['colmuna1', colu'mna2], ascending =[True, False])
dataframe[['columna','columna2']]
df['columna'] > 50
df[df['columna1'] == 'value']

var1 = df['columna1' == 'value1]
var2 = df['columna2' == 'value2]
df[var1 & var2]
df[(df['columna1' == 'value1]) & (df['columna2' == 'value2])]

is_var1_or_var2 = df['colum1'].isin(['var1','var2'])
df[is_var1_or_var2]


# Sort homelessness by region, then descending family members
homelessness_reg_fam = homelessness.sort_values(['region','family_members'], ascending = [True, False])

# Print the top few rows
print(homelessness_reg_fam.head())


# Select the state and family_members columns
state_fam = homelessness[['state','family_members']]

# Print the head of the result
print(state_fam.head())

# Select only the individuals and state columns, in that order
ind_state = homelessness[['individuals', 'state']]

# Print the head of the result
print(ind_state.head())

# Filter for rows where individuals is greater than 10000
ind_gt_10k = homelessness[homelessness["individuals"] > 10000]

# See the result
print(ind_gt_10k)

# Filter for rows where region is Mountain
mountain_reg = homelessness[homelessness['region']=='Mountain']

# See the result
print(mountain_reg)


# Filter for rows where family_members is less than 1000 
# and region is Pacific
fam_lt_1k_pac = homelessness[(homelessness["family_members"] < 1000) & (homelessness["region"] == "Pacific")]

# See the result
print(fam_lt_1k_pac)


# Subset for rows in South Atlantic or Mid-Atlantic regions
south_mid_atlantic = homelessness[(homelessness["region"] == "South Atlantic") | (homelessness["region"] == "Mid-Atlantic")]

# See the result
print(south_mid_atlantic)


# The Mojave Desert states
canu = ["California", "Arizona", "Nevada", "Utah"]

# Filter for rows in the Mojave Desert states
mojave_homelessness = homelessness[homelessness["state"].isin(canu)]

# See the result
print(mojave_homelessness)





















